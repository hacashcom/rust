





#[repr(u8)]
#[derive(Debug)]
pub enum Bytecode {
    _0=0x00,
    _1=0x01,
    _2=0x02,
    _3=0x03,
    _4=0x04,
    _5=0x05,
    _6=0x06,
    _7=0x07,
    _8=0x08,
    _9=0x09,
    _10=0x0a,
    _11=0x0b,
    _12=0x0c,
    _13=0x0d,
    _14=0x0e,
    _15=0x0f,
    _16=0x10,
    _17=0x11,
    _18=0x12,
    _19=0x13,
    _20=0x14,
    _21=0x15,
    _22=0x16,
    _23=0x17,
    _24=0x18,
    _25=0x19,
    _26=0x1a,
    _27=0x1b,
    _28=0x1c,
    _29=0x1d,
    _30=0x1e,
    _31=0x1f,
    _32=0x20,
    _33=0x21,
    _34=0x22,
    _35=0x23,
    _36=0x24,
    _37=0x25,
    _38=0x26,
    _39=0x27,
    _40=0x28,
    _41=0x29,
    _42=0x2a,
    _43=0x2b,
    _44=0x2c,
    _45=0x2d,
    _46=0x2e,
    _47=0x2f,
    _48=0x30,
    _49=0x31,
    _50=0x32,
    _51=0x33,
    _52=0x34,
    _53=0x35,
    _54=0x36,
    _55=0x37,
    _56=0x38,
    _57=0x39,
    _58=0x3a,
    _59=0x3b,
    _60=0x3c,
    _61=0x3d,
    _62=0x3e,
    _63=0x3f,

    CASTU8 =   0x40,
    CASTU16 =  0x41,
    CASTU32 =  0x42,
    CASTU64 =  0x43,
    CASTU128 = 0x44,
    
    _69=0x45, /* CASTU256 = 0x45, */

    CASTBUF =  0x46,

    _71=0x47,

    PUSHU8 = 0x48,
    PUSHU16 = 0x49,
    PUSH0 = 0x4a,
    PUSH1 = 0x4b,

    _76=0x4c,

    PUSHBUFL = 0x4d,
    PUSHBUF = 0x4e,

    _79=0x4f,
    _80=0x50,
    _81=0x51,
    _82=0x52,
    _83=0x53,
    _84=0x54,
    _85=0x55,
    _86=0x56,
    _87=0x57,
    
    DUP   = 0x58,
    POP   = 0x59,

    _90=0x5a,
    _91=0x5b,
    _92=0x5c,
    _93=0x5d,
    _94=0x5e,
    _95=0x5f,
    _96=0x60,
    _97=0x61,
    _98=0x62,
    _99=0x63,
    _100=0x64,
    _101=0x65,
    _102=0x66,
    _103=0x67,
    _104=0x68,
    _105=0x69,
    _106=0x6a,
    _107=0x6b,
    _108=0x6c,
    _109=0x6d,
    _110=0x6e,
    _111=0x6f,
    _112=0x70,
    _113=0x71,
    _114=0x72,
    _115=0x73,
    _116=0x74,
    _117=0x75,
    _118=0x76,
    _119=0x77,
    
    NOT    = 0x78, // not
    EQ     = 0x79, // equal
    NEQ    = 0x7a, // not equal
    LT     = 0x7b, // less than
    GT     = 0x7c, // great than
    LE     = 0x7d, // less and eq
    GE     = 0x7e, // great and eq

    _127=0x7f,
    
    ADD   = 0x80, // +
    SUB   = 0x81, // -
    MUL   = 0x82, // *
    DIV   = 0x83, // /
    MOD   = 0x84,
    POW   = 0x85,
    
    _134=0x86,
    _135=0x87,
    _136=0x88,
    _137=0x89,
    _138=0x8a,
    _139=0x8b,
    _140=0x8c,
    _141=0x8d,
    _142=0x8e,
    _143=0x8f,
    _144=0x90,
    _145=0x91,
    _146=0x92,
    _147=0x93,
    _148=0x94,
    _149=0x95,
    _150=0x96,
    _151=0x97,
    _152=0x98,
    _153=0x99,
    _154=0x9a,
    _155=0x9b,
    _156=0x9c,
    _157=0x9d,
    _158=0x9e,
    _159=0x9f,
    _160=0xa0,
    _161=0xa1,
    _162=0xa2,
    _163=0xa3,
    _164=0xa4,
    _165=0xa5,
    _166=0xa6,
    _167=0xa7,
    _168=0xa8,
    _169=0xa9,
    _170=0xaa,
    _171=0xab,
    _172=0xac,
    _173=0xad,
    _174=0xae,
    _175=0xaf,
    _176=0xb0,
    _177=0xb1,
    _178=0xb2,
    _179=0xb3,
    _180=0xb4,
    _181=0xb5,
    _182=0xb6,
    _183=0xb7,
    _184=0xb8,
    _185=0xb9,
    _186=0xba,
    _187=0xbb,
    _188=0xbc,
    
    GET    = 0xbd, // local get
    PUT    = 0xbe, // local put
    ALLOC  = 0xbf, // local alloc

    _192=0xc0,
    _193=0xc1,
    _194=0xc2,
    _195=0xc3,
    _196=0xc4,
    _197=0xc5,
    _198=0xc6,
    _199=0xc7,
    _200=0xc8,
    _201=0xc9,
    _202=0xca,
    _203=0xcb,
    _204=0xcc,
    _205=0xcd,
    _206=0xce,
    _207=0xcf,
    _208=0xd0,
    _209=0xd1,
    _210=0xd2,
    _211=0xd3,
    _212=0xd4,
    _213=0xd5,
    _214=0xd6,
    _215=0xd7,
    _216=0xd8,
    _217=0xd9,
    _218=0xda,
    _219=0xdb,
    _220=0xdc,
    _221=0xdd,
    _222=0xde,
    _223=0xdf,
    _224=0xe0,
    _225=0xe1,
    _226=0xe2,
    _227=0xe3,
    _228=0xe4,
    _229=0xe5,
    _230=0xe6,
    _231=0xe7,
    _232=0xe8,
    _233=0xe9,
    _234=0xea,
    _235=0xeb,
    
    NOP   = 0xec, // do nothing
    RET   = 0xed, // ret with data (function return)
    ABT   = 0xee, // end with error (abort)
    END   = 0xef, // end with finish

    JMP    = 0xf0, // jump
    JMPL   = 0xf1, // jump long

    BR     = 0xf2, // branch
    BRL    = 0xf3, // branch long

    _244=0xf4,
    _245=0xf5,
    _246=0xf6,
    _247=0xf7,
    _248=0xf8,
    _249=0xf9,
    _250=0xfa,
    _251=0xfb,
    _252=0xfc,
    _253=0xfd,
    _254=0xfe,
    NT    = 0xff, // panic: never touch
}










/*
macro_rules! define_bytecode_ptrs {
    ($( $name:ident : $bytv:expr)+) => {  
        $(
// concat_idents!(op_name = OP_, $name { pub const op_name: u8 = $bytv; });

pub const $name: u8 = $bytv;

        )+
    }
}

// define
// pub const OP_NOP: u8 = 0xfd;
define_bytecode_ptrs!{

    NT    : 0xff // panic: never touch

    END   : 0xef // end with finish
    ABT   : 0xee // end with error (abort)
    RET   : 0xed // ret with data (function return)
    NOP   : 0xec // do nothing

    ADD   : 0x80 // +

}
*/